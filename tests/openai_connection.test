<?php

/**
 * @file
 * Test class for OpenAI module integration.
 */

/**
 * Defines a test case for the OpenAI module.
 */
class OpenAITestCase extends BackdropWebTestCase {

  /**
   * A user object for the privileged user.
   *
   * @var object
   */
  protected $privilegedUser;

  /**
   * Sets up the test environment.
   */
  public function setUp() {
    // Load the OpenAI module.
    parent::setUp('openai');

    // Create a user with the necessary permissions.
    $this->privilegedUser = $this->backdropCreateUser([
      'administer site configuration'
    ]);
    $this->backdropLogin($this->privilegedUser);
  }

  /**
   * Test the API key configuration form.
   */
  public function testAPIKeyConfiguration() {
    // Navigate to the OpenAI settings form.
    $this->backdropGet('admin/config/openai/settings');

    // Verify that the API key and Organization ID fields exist.
    $this->assertFieldByName('api_key', '', 'API Key field found.');
    $this->assertFieldByName('api_org', '', 'Organization ID field found.');

    // Submit the form with test data.
    $edit = [
      'api_key' => 'test-key',
      'api_org' => 'test-org',
    ];
    $this->backdropPost(NULL, $edit, t('Save configuration'));

    // Verify that the form submission is successful.
    $this->assertText('The configuration options have been saved.', 'Configuration saved message shown.');
  }

  /**
   * Test API connectivity by simulating a call to OpenAIApi.
   */
  public function testAPIConnectivity() {
    // Initialize the OpenAIApi class with a test API key.
    $api = new OpenAIApi('test-key');

    // Simulate retrieving models.
    $models = $api->getModels();

    // Verify that models are retrieved.
    $this->assertNotEmpty($models, 'Models retrieved from OpenAI API.');
  }
}
